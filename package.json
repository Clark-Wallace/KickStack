{
  "name": "kickstack",
  "version": "1.0.0",
  "description": "KickStack - Local-first AI-powered backend platform",
  "private": true,
  "workspaces": [
    "ai/cli",
    "ai/orchestrator", 
    "api/fngw",
    "web"
  ],
  "scripts": {
    "kickstack": "cd ai/cli && npm run kickstack --",
    "dev": "docker-compose -f infra/docker-compose.yml up",
    "dev:down": "docker-compose -f infra/docker-compose.yml down",
    "dev:build": "docker-compose -f infra/docker-compose.yml up --build",
    "dev:logs": "docker-compose -f infra/docker-compose.yml logs -f",
    "test": "npm run test:all",
    "test:all": "npm run test:cli && npm run test:orchestrator && npm run test:fngw && npm run test:web",
    "test:cli": "cd ai/cli && npm test",
    "test:orchestrator": "cd ai/orchestrator && npm test", 
    "test:fngw": "cd api/fngw && npm test",
    "test:web": "cd web && npm test",
    "build": "npm run build:all",
    "build:all": "npm run build:cli && npm run build:orchestrator && npm run build:fngw && npm run build:web",
    "build:cli": "cd ai/cli && npm run build",
    "build:orchestrator": "cd ai/orchestrator && npm run build",
    "build:fngw": "cd api/fngw && npm run build", 
    "build:web": "cd web && npm run build",
    "lint": "npm run lint:all",
    "lint:all": "npm run lint:cli && npm run lint:orchestrator && npm run lint:fngw && npm run lint:web",
    "lint:cli": "cd ai/cli && npm run lint",
    "lint:orchestrator": "cd ai/orchestrator && npm run lint",
    "lint:fngw": "cd api/fngw && npm run lint",
    "lint:web": "cd web && npm run lint",
    "typecheck": "npm run typecheck:all",
    "typecheck:all": "npm run typecheck:cli && npm run typecheck:orchestrator && npm run typecheck:fngw && npm run typecheck:web", 
    "typecheck:cli": "cd ai/cli && npm run typecheck",
    "typecheck:orchestrator": "cd ai/orchestrator && npm run typecheck",
    "typecheck:fngw": "cd api/fngw && npm run typecheck",
    "typecheck:web": "cd web && npm run typecheck",
    "deploy:staging": "cd infra/fly && flyctl deploy --config fly.staging.toml",
    "deploy:production": "cd infra/fly && flyctl deploy --config fly.production.toml",
    "validate:local": "cd infra/fly && ./scripts/validate-deployment.sh",
    "validate:staging": "cd infra/fly && ./scripts/validate-deployment.sh kickstack-staging.fly.dev",
    "validate:production": "cd infra/fly && ./scripts/validate-deployment.sh kickstack-production.fly.dev",
    "test:rls:staging": "cd infra/fly && ./scripts/test-rls.sh kickstack-staging.fly.dev",
    "test:rls:production": "cd infra/fly && ./scripts/test-rls.sh kickstack-production.fly.dev",
    "setup": "npm install && npm run setup:workspaces",
    "setup:workspaces": "cd ai/cli && npm install && cd ../orchestrator && npm install && cd ../../api/fngw && npm install && cd ../../web && npm install",
    "clean": "npm run clean:workspaces && rm -rf node_modules",
    "clean:workspaces": "cd ai/cli && rm -rf node_modules dist && cd ../orchestrator && rm -rf node_modules dist && cd ../../api/fngw && rm -rf node_modules dist && cd ../../web && rm -rf node_modules .next",
    "cli:install": "cd ai/cli && npm install",
    "cli:build": "cd ai/cli && npm run build",
    "web:dev": "cd web && npm run dev",
    "web:build": "cd web && npm run build",
    "web:install": "cd web && npm install",
    "realtime:dev": "cd api/realtime && npm run dev",
    "realtime:build": "cd api/realtime && npm run build",
    "realtime:install": "cd api/realtime && npm install",
    "fngw:dev": "cd api/fngw && npm run dev",
    "fngw:build": "cd api/fngw && npm run build",
    "fngw:start": "cd api/fngw && npm run start",
    "fngw:install": "cd api/fngw && npm install",
    "fngw:test": "cd api/fngw && npm run test",
    "orchestrator:install": "cd ai/orchestrator && npm install",
    "orchestrator:build": "cd ai/orchestrator && npm run build",
    "orchestrator:test": "cd ai/orchestrator && npm run test",
    "build:cloud": "npm run fngw:build && npm run realtime:build && npm run web:build",
    "deploy:fly": "fly deploy -c infra/fly/fly.toml",
    "cloud:setup": "npm run orchestrator:install && npm run fngw:install && npm run realtime:install && npm run web:install"
  },
  "keywords": ["backend", "ai", "local-first", "postgresql", "realtime", "edge-functions"],
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  }
}